#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

const args = process.argv.slice(2);

function writeIfMissing(filePath, content) {
  if (fs.existsSync(filePath)) {
    console.log(`${path.basename(filePath)} already exists, skipping.`);
    return false;
  }
  fs.writeFileSync(filePath, content, { encoding: 'utf8' });
  console.log(`Created ${path.basename(filePath)}`);
  return true;
}

if (args[0] === 'init') {
  const cwd = process.cwd();
  const tailwindPath = path.join(cwd, 'tailwind.config.cjs');
  const postcssPath = path.join(cwd, 'postcss.config.cjs');

  const tailwindContent = `module.exports = {\n  content: ['./src/**/*.{js,jsx,ts,tsx,html}'],\n  theme: { extend: {} },\n  plugins: [],\n};\n`;

  const postcssContent = `module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  }\n}\n`;

  writeIfMissing(tailwindPath, tailwindContent);
  writeIfMissing(postcssPath, postcssContent);

  // handle -p flag (postcss) silently; our writes already include postcss.config.cjs
  process.exit(0);
}

console.error('This local shim only implements `tailwindcss init`. For full CLI support install the official Tailwind CLI: `npm install -D tailwindcss@latest`');
process.exit(1);
